def job_schedule(jobs):
    # Sort the jobs by descending profit
    jobs.sort(key=lambda x: x[2], reverse=True)

    # Find the maximum deadline to determine time slots
    max_deadline = max(job[1] for job in jobs)
    slot = [False] * max_deadline        # To track occupied slots
    schedule = [None] * max_deadline     # To store scheduled job IDs
    total_profit = 0

    # Try to schedule each job
    for job in jobs:
        job_id, job_deadline, job_profit = job

        # Find the latest available slot before or at the deadline
        for i in range(min(job_deadline, max_deadline) - 1, -1, -1):
            if not slot[i]:
                slot[i] = True
                schedule[i] = job_id
                total_profit += job_profit
                break

    # Output the final scheduled jobs and total profit
    print("Scheduled Jobs:", [job for job in schedule if job])
    print("Total Profit:", total_profit)

# Example job list: (Job ID, Deadline, Profit)
jobs = [
    ('J1', 2, 60),
    ('J2', 1, 100),
    ('J3', 3, 20),
    ('J4', 2, 40),
    ('J5', 1, 20)
]

# Run the scheduling function
job_schedule(jobs)
